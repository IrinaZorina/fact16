<main>
<h1>Циклы</h1>
<section>
    <h2>Слайд 23</h2>
    <p>3.Число Пи вычисляется по формуле Грегори следующим образом: РI=4(1-1/3+1/5-1/7+1/9-...), причем, чем больше
        слагаемых в скобках, тем выше точность вычисления числа Пи. Определить минимальное количество слагаемых для
        вычисления Пи с точностью 0.01
        .</p>
    <p>Решение:</p>
    <?php
    $pi = 0; // Инициализация переменной для хранения значения числа Пи
    $precision = 0.01; // Заданная точность вычисления числа Пи
    $term = 1; // Инициализация первого члена ряда
    $n = 0; // Инициализация счетчика итераций

    do {
        $pi += 4 * $term; // Вычисление значения числа Пи по формуле Грегори
        $term = -$term / (2 * ++$n + 1); // Вычисление следующего члена ряда
    } while (abs(4 * $term) >= $precision); // Проверка достижения заданной точности

    echo "<p>Минимальное количество слагаемых для достижения точности 0.01: $n</p>"; // Вывод результата

    ?>
</section>
<section>
    <h2>Слайд 25</h2>
    <section>
        <h3>1.Выведите столбец чисел от 5 до 13.
        </h3>
        <p>Решение:</p>
        <?php
        // Вывод столбца чисел от 5 до 13
        for ($i = 5; $i <= 13; $i++) {
            echo "<p>$i</p>"; // Вывод числа в теге <p>
        }

        ?>
    </section>
    <section>
        <h3>2.Дано число $num=1000. Делите его на 2 столько раз, пока результат деления не станет меньше 50. Какое число
            получится? Посчитайте количество итераций, необходимых для этого (итерация - это проход цикла). Решите
            задачу сначала через цикл while, а потом через цикл for.
        </h3>
        <section>
            <h4>Решение через while:</h4>
            <?php
            // Решение через цикл while
            $num = 1000; // Исходное число
            $iterations_while = 0; // Счетчик итераций

            while ($num >= 50) { // Пока число больше или равно 50
                $num /= 2; // Деление числа на 2
                $iterations_while++; // Увеличение счетчика итераций
            }

            echo "Результат через цикл while: $num\n"; // Вывод результата
            echo "Количество итераций через цикл while: $iterations_while\n"; // Вывод количества итераций
            ?>
        </section>
        <section>
            <h4>Решение через for:</h4>
            <?php
            // Решение через цикл for
            $num = 1000; // Исходное число
            $iterations_for = 0; // Счетчик итераций

            for ($num; $num >= 50; $iterations_for++) { // Пока число больше или равно 50
                $num /= 2; // Деление числа на 2
            }

            echo "Результат через цикл for: $num\n"; // Вывод результата
            echo "Количество итераций через цикл for: $iterations_for\n"; // Вывод количества итераций
            ?>
        </section>
    </section>
    <section>
        <h3>3.Необходимо создать переменную ($i) и передавать в нее значение. Если в переменную положить 0, то на экране
            должна отображаться строка со значением «0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10». Если переменная равна 1, то на
            экране отображается строка «0, 1, 2, 3, 4, 5, 6, 7, 8, 9». Если переменная равна 2, то на экране
            отображается строка «0, 1, 2, 3, 4, 5, 6, 7, 8». Если переменная равна 3, то на экране отображается строка
            «0, 1, 2, 3, 4, 5, 6, 7» и так далее, до i=10.
            .</h3>
        <p>Решение:</p>
        <?php
        $i = 0; // Исходное значение переменной $i

        while ($i <= 10) { // Пока $i меньше или равно 10
            echo "Строка для i = $i: "; // Вывод заголовка строки
            for ($j = 0; $j <= 10 - $i; $j++) { // Цикл для вывода чисел в строке
                echo "$j"; // Вывод числа
                if ($j < 10 - $i) { // Если число не последнее в строке
                    echo ", "; // Добавление запятой
                }
            }
            echo "\n"; // Переход на новую строку
            $i++; // Увеличение значения $i
        }

        ?>
    </section>
</section>
</main>
